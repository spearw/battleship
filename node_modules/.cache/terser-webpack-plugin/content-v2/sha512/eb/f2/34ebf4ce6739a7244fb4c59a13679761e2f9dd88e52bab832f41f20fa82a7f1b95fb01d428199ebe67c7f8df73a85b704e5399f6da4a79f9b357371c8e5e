{"code":"!function(e){var t={};function r(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(i,n,function(t){return e[t]}.bind(null,n));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){const i=r(1),n=r(2),a=r(3),o=r(4);function l(e=!1,t=!0,r=10){console.log(\"creating players...\");let l=a(e),c=a(t);console.log(\"generating boards...\");let h=i(r),u=i(r);console.log(\"creating ships\");let p=n.createShip(n.carrier),d=n.createShip(n.battleship),f=n.createShip(n.cruiser),m=n.createShip(n.destroyer),x=n.createShip(n.patrolBoat);console.log(\"placing ships...\"),s(h,p,d,f,m,x),s(u,n.createShip(n.carrier),n.createShip(n.battleship),n.createShip(n.cruiser),n.createShip(n.destroyer),n.createShip(n.patrolBoat)),console.log(\"showing boards...\");let g=document.getElementById(\"board1\"),y=document.getElementById(\"board2\");o.updateBoard(h,g,l,c,u,y),o.updateBoard(u,y,c,l,h,g)}function s(e,t,r,i,n,a){e.placeShip(1,1,t,!0),e.placeShip(8,5,r,!1),e.placeShip(2,3,i,!1),e.placeShip(5,4,n,!0),e.placeShip(2,8,a,!0)}document.getElementById(\"newgame\").addEventListener(\"click\",()=>{l()}),l()},function(e,t){const r=e=>{matrix=[];for(var t=0;t<e;t++)matrix[t]=new Array(e),matrix[t].fill(null);return matrix};e.exports=e=>({size:e,matrix:r(e),placeShip(e,t,r,n=!0){if(n)for(r.horizontal=!0,i=0;i<r.length;i++){if(null!=this.matrix[t][e+i])throw\"space occupied\";if(t>=matrix.length||e+i>=matrix[t].length)throw r.name+\" off the board\"}else for(r.horizontal=!1,i=0;i<r.length;i++){if(null!=this.matrix[t+i][e])throw\"space occupied\";if(t+i>=matrix.length||e>=matrix[t].length)throw\"off the board\"}if(n)for(i=0;i<r.length;i++)this.matrix[t][e+i]=r;else for(i=0;i<r.length;i++)this.matrix[t+i][e]=r;return this},recieveAttack(e,t){return null!=this.matrix[t][e]?(this.matrix[t][e].hit(0),this.matrix[t][e]=this.matrix[t][e],this):(this.matrix[t][e]=!0,this)},anyShipsAlive(){for(let e=0;e<this.matrix.length;e++)for(let t=0;t<this.matrix[e].length;t++)if(null!=this.matrix[e][t]&&1!=this.matrix[e][t]&&0==this.matrix[e][t].isSunk())return!0;return!1}})},function(e,t){carrier={name:\"Carrier\",length:5},battleship={name:\"Battleship\",length:4},cruiser={name:\"Cruiser\",length:3},destroyer={name:\"Destroyer\",length:3},patrolBoat={name:\"Patrol Boat\",length:2},submarine={name:\"Submarine\",length:1},e.exports.createShip=({name:e,length:t,horizontal:r})=>({name:e,length:t,horizontal:r,hits:Array(t).fill(0),hit(){return foundIndex=this.hits.findIndex(e=>0==e),this.hits[foundIndex]=1,this},isSunk(){return this.hits.every(e=>1==e)}}),e.exports.carrier=carrier,e.exports.battleship=battleship,e.exports.cruiser=cruiser,e.exports.destroyer=destroyer,e.exports.patrolBoat=patrolBoat,e.exports.submarine=submarine},function(e,t){e.exports=(e=!1)=>({ai:e,needToSelectSquare:!0,attacks:[],attackBoard(e,t,r){return!(e>=r.size||t>=r.size||this.attacks.includes(`[${e},${t}]`)||(r.recieveAttack(e,t),this.attacks.push(`[${e},${t}]`),0))},randomAttack(e){let t=e.size;for(;;){let r=Math.floor(Math.random()*(+t-0))+0,i=Math.floor(Math.random()*(+t-0))+0;if(this.attackBoard(r,i,e))break}}})},function(e,t){throw new Error('Module parse failed: Unexpected token (37:16)\\nYou may need an appropriate loader to handle this file type.\\n|                 console.log(`[${j},${i}]`)\\n|                 console.log(player.attacks.includes(`[${j},${i}]`)\\n>                 if (player.attacks.includes(`[${j},${i}]`)){\\n|                     newSquare.innerHTML = \"x\"\\n|                 }')}]);","extractedComments":[]}